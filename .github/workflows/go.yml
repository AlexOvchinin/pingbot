# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.22'

  #   - name: Build
  #     run: go build -v -o ./ ./...

  #   - name: Test
  #     run: go test -v ./...

  #   - name: Upload build artifact
  #     uses: actions/upload-artifact@v4.3.4
  #     with:
  #       name: pingbot-binary
  #       path: ./pingbot
  #       if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    # needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      # - name: Download binary artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: pingbot-binary

      # - name: Make binary executable
      #   run: chmod +x ./pingbot
        
      # - name: Copy artifact to the host
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.DEPLOY_HOST }}
      #     key: ${{ secrets.DEPLOY_HOST_PRIVATE_KEY }}
      #     source: pingbot
      #     target: /apps/pingbot
      - name: multiple command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_HOST_SSH_USER }}
          key: ${{ secrets.DEPLOY_HOST_PRIVATE_KEY }}
          script: |
            sudo systemctl restart pingbot.service
            sudo systemctl status pingbot.service
